package net.lenni0451.reflect.accessor;

/**
 * This class wraps access to the jdk internal Unsafe class.<br>
 * The internal Unsafe class was added in Java 11. All methods in this class throw {@link UnsupportedOperationException} on Java versions below 11.<br>
 * Since these methods are not part of the public API, they may change or be removed at any time without prior notice!<br>
 * The methods in this class are based on <b>Java {{sourceVersion}}</b> and might be different in other Java versions.<br>
 * <br>
 * To use this class, you need to enable access to the jdk.internal.misc package for your module.<br>
 * You can do this by adding the following JVM argument: {@code --add-exports java.base/jdk.internal.misc=ALL-UNNAMED}<br>
 * Or you call {@code Modules.openModule(JavaBypass.INTERNAL_UNSAFE.getClass())} to open the module at runtime. <b>This has to be done before this class is loaded!</b>
 */
public class InternalUnsafeAccess {

    {{#each this}}
    public static {{returnType}} {{name}}({{#args}}final {{..type}} {{..name}}{{#iterHasNext}}, {{/iterHasNext}}{{/args}}) {
        throw new UnsupportedOperationException("Method {{name}}({{#args}}{{..type}}{{#iterHasNext}}, {{/iterHasNext}}{{/args}}) is not supported on this Java version");
    }

    {{/each}}
}
